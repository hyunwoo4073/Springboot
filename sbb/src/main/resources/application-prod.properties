spring.application.name=sbb

# DATABASE
# test용으로 h2 사용
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console
# spring.h2.console.settings.web-allow-others=true
# spring.datasource.url=jdbc:h2:~/local
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=1234
spring.datasource.url=jdbc:postgresql://localhost:5432/sbb
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=dbmasteruser
spring.datasource.password=1234

# JPA
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true

# logging
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.max-file-size=100MB
logging.file.name=logs/sbb.log
logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}.%d{yyyy-MM-dd}-%i.log
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS,Asia/Seoul

# logging.logback.rollingpolicy.max-history=30 : 로그 파일을 유지할 기간(일수)을 설정, 여기서는 30일일
# logging.logback.rollingpolicy.max-file-size=100MB : 로그 파일 1개의 최대 용량(size)를 설정, 여기서는 100MB
# logging.file.name=logs/sbb.log : 로그 파일 이름 설정
# logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}.%d{yyyy-MM-dd}-%i.log : 로그 파일의 용량이 설정한 용량을 초과하거나 날짜가 변경될 경우 새로이 만들어질 로그 파일의 이름에 관한 규칙(pattern)을 설정
# logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS,Asia/Seoul : 로그 출력 시 출력하는 날짜와 시간의 형식과 타임존을 설정, 설정하지 않을경우 UTC 시간을 기준으로 출력